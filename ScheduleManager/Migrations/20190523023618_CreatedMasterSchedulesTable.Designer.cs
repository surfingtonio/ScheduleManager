// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScheduleManager.Data;

namespace ScheduleManager.Migrations
{
    [DbContext(typeof(ScheduleManagerDbContext))]
    [Migration("20190523023618_CreatedMasterSchedulesTable")]
    partial class CreatedMasterSchedulesTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ScheduleManager.Data.Entities.DayOfWeek", b =>
                {
                    b.Property<int>("DayOfWeekId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MasterScheduleId");

                    b.Property<string>("Name");

                    b.HasKey("DayOfWeekId");

                    b.HasIndex("MasterScheduleId");

                    b.ToTable("DaysOfWeek");
                });

            modelBuilder.Entity("ScheduleManager.Data.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Firstname");

                    b.Property<string>("Lastname");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ScheduleManager.Data.Entities.MasterSchedule", b =>
                {
                    b.Property<int>("MasterScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CanOccurOnHolidays");

                    b.Property<int>("DurationHours");

                    b.Property<int>("EmployeeId");

                    b.Property<DateTime?>("EndDate");

                    b.Property<int>("Frequency");

                    b.Property<int>("Interval");

                    b.Property<bool>("IsAllDay");

                    b.Property<bool>("IsOnWeekdays");

                    b.Property<bool>("RepeatsIndefinitely");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Title");

                    b.HasKey("MasterScheduleId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("MasterSchedules");
                });

            modelBuilder.Entity("ScheduleManager.Data.Entities.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("DurationHours");

                    b.Property<int>("EmployeeId");

                    b.Property<DateTime?>("EndDate");

                    b.Property<int>("RepeatAfterDays");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("ScheduleId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("ScheduleManager.Data.Entities.DayOfWeek", b =>
                {
                    b.HasOne("ScheduleManager.Data.Entities.MasterSchedule")
                        .WithMany("DaysOfWeek")
                        .HasForeignKey("MasterScheduleId");
                });

            modelBuilder.Entity("ScheduleManager.Data.Entities.MasterSchedule", b =>
                {
                    b.HasOne("ScheduleManager.Data.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ScheduleManager.Data.Entities.Schedule", b =>
                {
                    b.HasOne("ScheduleManager.Data.Entities.Employee", "Employee")
                        .WithMany("Schedules")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
